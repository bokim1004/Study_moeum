### SPA란

최초 한번 페이지 전체를 로딩한 후 데이터만 변경하여 사용할 수 있는
애플리케이션 (1개의 page에서 여러가지 동작이 이루어지는 방식)

`CSR`: 사용자의 행동에 따라 필요한 부분만 다시 읽어들이기에 서버측에서
렌더링하여 전체 페이지를 다시 읽어들이는 것보다 빠른 인터렉션을 기대할 수
있다.

서버는 단지 JSON파일만 보내주는 역할을 하며 html을 그리는 역할은 클라이언트 측에서 자바스크립트가 수행하였다. 이것이 클라이언트 사이드 렌더링이다.

`SPA`는 한 종류의 화면만 존재하는 것이 아니다. 화면에 따라 다른 주소를 가진다.
주소에 따라 다른 뷰를 렌더링하는 것을 라우팅이라고 한다.

`SSR의 최대 장점은 SEO 검색엔진 최적화`이다. SSR은 한번에 렌더링되기에 초기
로딩속도는 빠르지만, page이동시에는 CSR보다 느리다.
SSR 서버사이드 렌더링은 요청시마다 새로고침이 일어나며 서버에 새로운 페이지에 대한 요청을 하는 방식이다

### 초기 view로딩속도

SSR의 경우 서버에서 렌더링하여 가져오기에 첫 로딩이 매우 짧다. 반면 CSR의 경우 서버에서 view를 렌더하지 않고 브라우저에서 렌더링하기에 SSR보다는 초기 view로딩속도가 오래걸린다

CSR은 페이지를 읽어들이는 시간 +JS를 읽어들이는 시간 + JS가 화면을 그리는 시간 위 작업이 완료 후 콘텐츠가 사용자에게 보여진다. 즉 초기 구동속도가 느리다는 단점이 존재한다. 물론 초기 구동속도를 제외하면 그 다음부터는 빠른 인터랙션의 성능을 보인다.

### 정리

SSR의 경우 초기 로딩속도가 빠르고 SEO에 유리하지만 View변경시 서버에 계속 요청을 해야하므로 서버에 부담이 크다.
CSR의 경우 초기 로딩속도는 느리지만 초기로딩 후에는 서버에 다시 요청할 필요없이 클라이언트 내에서 작업이 이루어지므로 매우빠르다. 하지만 SEO에 대한 문제가 있다.
